
name: Node CI
on:
  # Run tests for any PRs.
  pull_request:
    branches:
      - main
env:
  PGHOST_TEST: localhost
  PGUSER_TEST: postgres
  PGDATABASE_TEST: forumapi_test
  PGPASSWORD_TEST: devsecretpassword
  PGPORT_TEST: 5432
jobs:
  build:
    runs-on: ubuntu-24.04
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:17-alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: devsecretpassword
          POSTGRES_DB: forumapi_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    strategy:
      fail-fast: false
      matrix:
        node-version: [22.x, 24.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Yarn Install
      run: yarn --frozen-lockfile
    - name: Lint
      run: yarn lint
    - name: Migrate
      run: yarn migrate:test up
    - name: Test
      run: yarn test:ci --coverage --runInBand
      env:
        ACCESS_TOKEN_KEY: 7336763979244226452948404D6251655468576D5A7134743777217A25432A462D4A614E645266556A586E3272357538782F413F4428472B4B6250655368566B
        REFRESH_TOKEN_KEY: 6E3272357538782F413F4428472B4B6250655368566B5970337336763979244226452948404D635166546A576E5A7134743777217A25432A462D4A614E645267
        ACCCESS_TOKEN_AGE: 3000
        HOST: localhost
        PORT: 5000
    - name: Codecov
      uses: codecov/codecov-action@v5
      if: ${{ matrix.node-version == '22.x'}}
    #- name: Run use pm2
    #  run: |
    #    npm install pm2@latest -g
    #    pm2 start src/ --name forum_api
    #    pm2 ls
    #- uses: matt-ball/newman-action@v0.2.4
    #  with:
    #    collection: postman/forumapi.postman_collection.json
    #    environment: postman/forumapi.postman_environment.json
    #- name: Stop server
    #  run: pm2 stop forum_api
    #- name: Generate Docs
    #  run: yarn docs
    #- name: Publish to Github Pages
    #  if: ${{ github.event_name == 'push' && matrix.node-version == '14.x' }}
    #  uses: JamesIves/github-pages-deploy-action@4.1.5
    #  with:
    #    branch: gh-pages # The branch the action should deploy to.
    #    folder: docs # The folder the action should deploy.
